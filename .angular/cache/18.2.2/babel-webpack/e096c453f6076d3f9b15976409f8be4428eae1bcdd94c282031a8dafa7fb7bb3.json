{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./componente11.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./componente11.component.css?ngResource\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nlet Componente11Component = class Componente11Component {\n  // Objeto de formulário     nome:string;  idade:number = null;\n  formulario = new FormGroup({\n    nome: new FormControl('', [Validators.required, Validators.minLength(3)]),\n    idade: new FormControl(null, [Validators.required, Validators.min(0), Validators.max(120)]),\n    cidade: new FormControl('', [Validators.required, Validators.minLength(3)])\n  });\n  // Visibilidade dos botões\n  btnCadastrar = true;\n  // Vetor de armazenamento na tabela\n  vetor = [];\n  // Armazenar indice da pessoa selecionada\n  indice = -1;\n  // Função decadastro\n  cadastrar() {\n    // Cadastro no vetor\n    this.vetor.push(this.formulario.value);\n    // Limpeza dos inputs\n    this.formulario.reset();\n    // Visualização via console\n    //console.table(this.vetor);\n  }\n  // Função de seleção\n  selecionar(indice) {\n    // Atribuir índice da pessoa\n    this.indice = indice;\n    // Atribuir os dados da pessoa no formulário\n    this.formulario.setValue({\n      nome: this.vetor[indice].nome,\n      idade: this.vetor[indice].idade,\n      cidade: this.vetor[indice].cidade\n    });\n    // Visibilidade dos botões\n    this.btnCadastrar = false;\n  }\n  // Função de alteração dos dados da pessoa\n  alterar() {\n    // Alterar vetor\n    this.vetor[this.indice] = this.formulario.value;\n    // Limpar os inputs\n    this.formulario.reset();\n    // Visibilidade dos botões\n    this.btnCadastrar = true;\n  }\n  // Função de remoção\n  remover() {\n    // Removendo pessoa do vetor\n    this.vetor.splice(this.indice, 1);\n    // Limpeza dos inputs\n    this.formulario.reset();\n    // Visibilidade dos botões\n    this.btnCadastrar = true;\n  }\n  // Função de cancelamento\n  cancelar() {\n    // Limpeza dos inputs\n    this.formulario.reset();\n    // Visibilidade dos botões\n    this.btnCadastrar = true;\n  }\n};\nComponente11Component = __decorate([Component({\n  selector: 'app-componente11',\n  standalone: true,\n  imports: [ReactiveFormsModule, CommonModule],\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], Componente11Component);\nexport { Componente11Component };","map":{"version":3,"names":["Component","FormControl","FormGroup","ReactiveFormsModule","Validators","CommonModule","Componente11Component","formulario","nome","required","minLength","idade","min","max","cidade","btnCadastrar","vetor","indice","cadastrar","push","value","reset","selecionar","setValue","alterar","remover","splice","cancelar","__decorate","selector","standalone","imports","template","__NG_CLI_RESOURCE__0"],"sources":["C:\\Users\\ingri\\OneDrive\\Documentos\\ESTUDOS\\Angular\\curso-angular-basico\\src\\app\\componente11\\componente11.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { Pessoa } from '../modelo/Pessoa';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-componente11',\r\n  standalone: true,\r\n  imports: [ReactiveFormsModule, CommonModule],\r\n  templateUrl: './componente11.component.html',\r\n  styleUrl: './componente11.component.css'\r\n})\r\nexport class Componente11Component {\r\n\r\n  // Objeto de formulário     nome:string;  idade:number = null;\r\n  formulario = new FormGroup({\r\n    nome: new FormControl('',    [Validators.required, Validators.minLength(3)]),\r\n    idade: new FormControl(null, [Validators.required, Validators.min(0), Validators.max(120)]),\r\n    cidade: new FormControl('',  [Validators.required, Validators.minLength(3)])\r\n  });\r\n\r\n  // Visibilidade dos botões\r\n  btnCadastrar:boolean = true;\r\n\r\n  // Vetor de armazenamento na tabela\r\n  vetor:Pessoa[] = [];\r\n\r\n  // Armazenar indice da pessoa selecionada\r\n  indice:number = -1;\r\n\r\n  // Função decadastro\r\n  cadastrar(){\r\n\r\n    // Cadastro no vetor\r\n    this.vetor.push(this.formulario.value as Pessoa);\r\n\r\n    // Limpeza dos inputs\r\n    this.formulario.reset();\r\n\r\n    // Visualização via console\r\n    //console.table(this.vetor);\r\n  }\r\n\r\n  // Função de seleção\r\n  selecionar(indice:number){\r\n\r\n    // Atribuir índice da pessoa\r\n    this.indice = indice;\r\n\r\n    // Atribuir os dados da pessoa no formulário\r\n    this.formulario.setValue({\r\n      nome : this.vetor[indice].nome,\r\n      idade : this.vetor[indice].idade,\r\n      cidade : this.vetor[indice].cidade\r\n    });\r\n\r\n    // Visibilidade dos botões\r\n    this.btnCadastrar = false;\r\n\r\n  }\r\n\r\n  // Função de alteração dos dados da pessoa\r\n  alterar(){\r\n\r\n    // Alterar vetor\r\n    this.vetor[this.indice] = this.formulario.value as Pessoa;\r\n\r\n    // Limpar os inputs\r\n    this.formulario.reset();\r\n\r\n    // Visibilidade dos botões\r\n    this.btnCadastrar = true;\r\n  }\r\n\r\n  // Função de remoção\r\n  remover(){\r\n\r\n    // Removendo pessoa do vetor\r\n    this.vetor.splice(this.indice, 1);\r\n\r\n    // Limpeza dos inputs\r\n    this.formulario.reset();\r\n\r\n    // Visibilidade dos botões\r\n    this.btnCadastrar = true;\r\n  }\r\n\r\n  // Função de cancelamento\r\n  cancelar(){\r\n\r\n    // Limpeza dos inputs\r\n    this.formulario.reset();\r\n\r\n    // Visibilidade dos botões\r\n    this.btnCadastrar = true;\r\n  }\r\n}\r\n"],"mappings":";;;AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAASC,WAAW,EAAEC,SAAS,EAAEC,mBAAmB,EAAEC,UAAU,QAAQ,gBAAgB;AAExF,SAASC,YAAY,QAAQ,iBAAiB;AASvC,IAAMC,qBAAqB,GAA3B,MAAMA,qBAAqB;EAEhC;EACAC,UAAU,GAAG,IAAIL,SAAS,CAAC;IACzBM,IAAI,EAAE,IAAIP,WAAW,CAAC,EAAE,EAAK,CAACG,UAAU,CAACK,QAAQ,EAAEL,UAAU,CAACM,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5EC,KAAK,EAAE,IAAIV,WAAW,CAAC,IAAI,EAAE,CAACG,UAAU,CAACK,QAAQ,EAAEL,UAAU,CAACQ,GAAG,CAAC,CAAC,CAAC,EAAER,UAAU,CAACS,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IAC3FC,MAAM,EAAE,IAAIb,WAAW,CAAC,EAAE,EAAG,CAACG,UAAU,CAACK,QAAQ,EAAEL,UAAU,CAACM,SAAS,CAAC,CAAC,CAAC,CAAC;GAC5E,CAAC;EAEF;EACAK,YAAY,GAAW,IAAI;EAE3B;EACAC,KAAK,GAAY,EAAE;EAEnB;EACAC,MAAM,GAAU,CAAC,CAAC;EAElB;EACAC,SAASA,CAAA;IAEP;IACA,IAAI,CAACF,KAAK,CAACG,IAAI,CAAC,IAAI,CAACZ,UAAU,CAACa,KAAe,CAAC;IAEhD;IACA,IAAI,CAACb,UAAU,CAACc,KAAK,EAAE;IAEvB;IACA;EACF;EAEA;EACAC,UAAUA,CAACL,MAAa;IAEtB;IACA,IAAI,CAACA,MAAM,GAAGA,MAAM;IAEpB;IACA,IAAI,CAACV,UAAU,CAACgB,QAAQ,CAAC;MACvBf,IAAI,EAAG,IAAI,CAACQ,KAAK,CAACC,MAAM,CAAC,CAACT,IAAI;MAC9BG,KAAK,EAAG,IAAI,CAACK,KAAK,CAACC,MAAM,CAAC,CAACN,KAAK;MAChCG,MAAM,EAAG,IAAI,CAACE,KAAK,CAACC,MAAM,CAAC,CAACH;KAC7B,CAAC;IAEF;IACA,IAAI,CAACC,YAAY,GAAG,KAAK;EAE3B;EAEA;EACAS,OAAOA,CAAA;IAEL;IACA,IAAI,CAACR,KAAK,CAAC,IAAI,CAACC,MAAM,CAAC,GAAG,IAAI,CAACV,UAAU,CAACa,KAAe;IAEzD;IACA,IAAI,CAACb,UAAU,CAACc,KAAK,EAAE;IAEvB;IACA,IAAI,CAACN,YAAY,GAAG,IAAI;EAC1B;EAEA;EACAU,OAAOA,CAAA;IAEL;IACA,IAAI,CAACT,KAAK,CAACU,MAAM,CAAC,IAAI,CAACT,MAAM,EAAE,CAAC,CAAC;IAEjC;IACA,IAAI,CAACV,UAAU,CAACc,KAAK,EAAE;IAEvB;IACA,IAAI,CAACN,YAAY,GAAG,IAAI;EAC1B;EAEA;EACAY,QAAQA,CAAA;IAEN;IACA,IAAI,CAACpB,UAAU,CAACc,KAAK,EAAE;IAEvB;IACA,IAAI,CAACN,YAAY,GAAG,IAAI;EAC1B;CACD;AApFYT,qBAAqB,GAAAsB,UAAA,EAPjC5B,SAAS,CAAC;EACT6B,QAAQ,EAAE,kBAAkB;EAC5BC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,CAAC5B,mBAAmB,EAAEE,YAAY,CAAC;EAC5C2B,QAAA,EAAAC,oBAA4C;;CAE7C,CAAC,C,EACW3B,qBAAqB,CAoFjC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}