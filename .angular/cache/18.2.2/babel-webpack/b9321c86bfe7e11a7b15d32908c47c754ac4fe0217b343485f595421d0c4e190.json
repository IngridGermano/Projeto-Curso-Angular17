{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./componente13.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./componente13.component.css?ngResource\";\nimport { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { ProdutoService } from '../servico/produto.service';\nimport { FormControl, FormGroup, ReactiveFormsModule } from '@angular/forms';\nlet Componente13Component = class Componente13Component {\n  servico;\n  // Vetor\n  vetor = [];\n  // Visibilidade dos botões\n  btnCadastrar = true;\n  // Objeto de formulário reativo\n  formulario = new FormGroup({\n    id: new FormControl(null),\n    nome: new FormControl(''),\n    valor: new FormControl(null)\n  });\n  // Construtor\n  constructor(servico) {\n    this.servico = servico;\n  }\n  // Inicialização do componente\n  ngOnInit() {\n    this.selecionar();\n  }\n  // Método para selecionar todos os produtos\n  selecionar() {\n    this.servico.selecionar().subscribe(retorno => {\n      this.vetor = retorno;\n    });\n  }\n  // Método para cadastrar produtos\n  cadastrar() {\n    //this.formulario.get(\"id\").setValue(\"id\");\n    this.servico.cadastrar(this.formulario.value).subscribe(retorno => {\n      this.vetor.push(retorno);\n      this.formulario.reset();\n    });\n  }\n  // Método para selecionar um produto específico\n  selecionarProduto(indice) {\n    this.formulario.setValue({\n      id: this.vetor[indice].id,\n      nome: this.vetor[indice].nome,\n      valor: this.vetor[indice].valor\n    });\n    this.btnCadastrar = false;\n  }\n  // Método para alterar produtos\n  alterar() {\n    this.servico.alterar(this.formulario.value).subscribe(retorno => {\n      // Obter o índice do objeto alterado\n      let indiceAlterado = this.vetor.findIndex(obj => {\n        return this.formulario.value.id === obj.id;\n      });\n      // Alterar o vetor\n      this.vetor[indiceAlterado] = retorno;\n      // Limpar o formulário\n      this.formulario.reset();\n      // Visibilidade dos botões\n      this.btnCadastrar = true;\n    });\n  }\n  // Método para remover produtos\n  remover() {\n    this.servico.remover(this.formulario.value.id).subscribe(() => {\n      // Obter o índice do vetor que será removido\n      let indiceRemovido = this.vetor.findIndex(obj => {\n        return obj.id === this.formulario.value.id;\n      });\n      // Remover objeto do vetor\n      this.vetor.splice(indiceRemovido, 1);\n      // Limpar formulário\n      this.formulario.reset();\n      // Visibilidade dos botões\n      this.btnCadastrar = true;\n    });\n  }\n  static ctorParameters = () => [{\n    type: ProdutoService\n  }];\n};\nComponente13Component = __decorate([Component({\n  selector: 'app-componente13',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule],\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], Componente13Component);\nexport { Componente13Component };","map":{"version":3,"names":["CommonModule","Component","ProdutoService","FormControl","FormGroup","ReactiveFormsModule","Componente13Component","servico","vetor","btnCadastrar","formulario","id","nome","valor","constructor","ngOnInit","selecionar","subscribe","retorno","cadastrar","value","push","reset","selecionarProduto","indice","setValue","alterar","indiceAlterado","findIndex","obj","remover","indiceRemovido","splice","__decorate","selector","standalone","imports","template","__NG_CLI_RESOURCE__0"],"sources":["C:\\Users\\ingri\\OneDrive\\Documentos\\ESTUDOS\\Angular\\curso-angular-basico\\src\\app\\componente13\\componente13.component.ts"],"sourcesContent":["import { CommonModule } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { Produto } from '../modelo/Produto';\r\nimport { ProdutoService } from '../servico/produto.service';\r\nimport { FormControl, FormGroup, ReactiveFormsModule } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-componente13',\r\n  standalone: true,\r\n  imports: [CommonModule, ReactiveFormsModule],\r\n  templateUrl: './componente13.component.html',\r\n  styleUrl: './componente13.component.css'\r\n})\r\nexport class Componente13Component {\r\n\r\n  // Vetor\r\n  vetor:Produto [] = [];\r\n\r\n  // Visibilidade dos botões\r\n  btnCadastrar:boolean = true;\r\n\r\n  // Objeto de formulário reativo\r\n  formulario = new FormGroup({\r\n    id: new FormControl(null),\r\n    nome: new FormControl(''),\r\n    valor: new FormControl(null)\r\n  });\r\n\r\n  // Construtor\r\n  constructor(private servico:ProdutoService){}\r\n\r\n  // Inicialização do componente\r\n  ngOnInit(){\r\n    this.selecionar();\r\n  }\r\n\r\n  // Método para selecionar todos os produtos\r\n  selecionar(){\r\n    this.servico.selecionar().subscribe(retorno => {this.vetor = retorno});\r\n  }\r\n\r\n  // Método para cadastrar produtos\r\n  cadastrar(){\r\n    //this.formulario.get(\"id\").setValue(\"id\");\r\n    this.servico.cadastrar(this.formulario.value as Produto)\r\n    .subscribe(retorno => {\r\n\r\n      this.vetor.push(retorno);\r\n\r\n      this.formulario.reset();\r\n    });\r\n  }\r\n\r\n  // Método para selecionar um produto específico\r\n  selecionarProduto(indice:number){\r\n\r\n    this.formulario.setValue({\r\n      id: this.vetor[indice].id,\r\n      nome: this.vetor[indice].nome,\r\n      valor: this.vetor[indice].valor\r\n    });\r\n\r\n    this.btnCadastrar = false;\r\n\r\n  }\r\n\r\n  // Método para alterar produtos\r\n  alterar(){\r\n    this.servico.alterar(this.formulario.value as Produto)\r\n    .subscribe(retorno => {\r\n\r\n      // Obter o índice do objeto alterado\r\n      let indiceAlterado = this.vetor.findIndex(obj => {\r\n        return this.formulario.value.id === obj.id;\r\n      });\r\n\r\n      // Alterar o vetor\r\n      this.vetor[indiceAlterado] = retorno;\r\n\r\n      // Limpar o formulário\r\n      this.formulario.reset();\r\n\r\n      // Visibilidade dos botões\r\n      this.btnCadastrar = true;\r\n    });\r\n  }\r\n\r\n  // Método para remover produtos\r\n  remover(){\r\n\r\n    this.servico.remover(this.formulario.value.id)\r\n    .subscribe(() => {\r\n\r\n      // Obter o índice do vetor que será removido\r\n      let indiceRemovido = this.vetor.findIndex(obj => {\r\n        return obj.id === this.formulario.value.id;\r\n      });\r\n\r\n      // Remover objeto do vetor\r\n      this.vetor.splice(indiceRemovido, 1);\r\n\r\n      // Limpar formulário\r\n      this.formulario.reset();\r\n\r\n      // Visibilidade dos botões\r\n      this.btnCadastrar = true;\r\n\r\n    });\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}