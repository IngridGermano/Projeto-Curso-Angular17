{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/ingri/Documents/curso-angular-basico/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// Importações\nimport { TestBed } from '@angular/core/testing';\nimport { Componente17Component } from './componente17.component';\n// Estrutura do teste unitário\ndescribe('Testando componente 17', () => {\n  // Inicialização do componente\n  beforeEach( /*#__PURE__*/_asyncToGenerator(function* () {\n    yield TestBed.configureTestingModule({\n      imports: [Componente17Component]\n    }).compileComponents();\n  }));\n  // Validar a variável texto\n  it('Validar variável nome', () => {\n    // Fixture\n    const fixture = TestBed.createComponent(Componente17Component);\n    // Obter as variáveis e funções do componente\n    const componente = fixture.componentInstance;\n    // Validação\n    expect(componente.nome).toEqual('Iza');\n  });\n  // Validar a variável média\n  it('Validar o valor inicial da variável média', () => {\n    // Fixture\n    const fixture = TestBed.createComponent(Componente17Component);\n    // Obter as variáveis e funções do componente\n    const componente = fixture.componentInstance;\n    // Validação\n    expect(componente.media).toEqual(0);\n  });\n  // Validar o retorno do método de cálculo\n  it('Validar o método de cálculo', () => {\n    // Fixture\n    const fixture = TestBed.createComponent(Componente17Component);\n    // Obter as variáveis e funções do componente\n    const componente = fixture.componentInstance;\n    // Executar função\n    const retorno = componente.calculo(10, 8);\n    // Validar\n    expect(retorno).toEqual(9);\n  });\n  // Verificar se a inicialização da variável média é 0 e após executar\n  // a função calculo o valor seja atribuido a variável média\n  it('Variável e função', () => {\n    // Fixture\n    const fixture = TestBed.createComponent(Componente17Component);\n    // Obter as variáveis e funções do componente\n    const componente = fixture.componentInstance;\n    // Validar se a variável média possui o valor 0\n    expect(componente.media).toEqual(0);\n    // Executar função\n    const retorno = componente.calculo(5, 9);\n    // Atribuir o retorno da função para a variável média\n    componente.media = retorno;\n    // Validar se a variável média possui o valor 7\n    expect(componente.media).toEqual(7);\n  });\n});","map":{"version":3,"names":["TestBed","Componente17Component","describe","beforeEach","_asyncToGenerator","configureTestingModule","imports","compileComponents","it","fixture","createComponent","componente","componentInstance","expect","nome","toEqual","media","retorno","calculo"],"sources":["C:\\Users\\ingri\\Documents\\curso-angular-basico\\src\\app\\componente17\\componente17.component.spec.ts"],"sourcesContent":["// Importações\r\nimport { TestBed } from '@angular/core/testing';\r\nimport { Componente17Component } from './componente17.component';\r\n\r\n// Estrutura do teste unitário\r\ndescribe('Testando componente 17', () => {\r\n\r\n  // Inicialização do componente\r\n  beforeEach(async () => {\r\n    await TestBed.configureTestingModule({\r\n      imports: [Componente17Component]\r\n    }).compileComponents();\r\n  });\r\n\r\n  // Validar a variável texto\r\n  it('Validar variável nome', () => {\r\n\r\n    // Fixture\r\n    const fixture = TestBed.createComponent(Componente17Component);\r\n\r\n    // Obter as variáveis e funções do componente\r\n    const componente = fixture.componentInstance;\r\n\r\n    // Validação\r\n    expect(componente.nome).toEqual('Iza');\r\n\r\n  });\r\n\r\n  // Validar a variável média\r\n  it('Validar o valor inicial da variável média', () => {\r\n\r\n    // Fixture\r\n    const fixture = TestBed.createComponent(Componente17Component);\r\n\r\n    // Obter as variáveis e funções do componente\r\n    const componente = fixture.componentInstance;\r\n\r\n    // Validação\r\n    expect(componente.media).toEqual(0);\r\n\r\n  });\r\n\r\n  // Validar o retorno do método de cálculo\r\n  it('Validar o método de cálculo', () => {\r\n\r\n    // Fixture\r\n    const fixture = TestBed.createComponent(Componente17Component);\r\n\r\n    // Obter as variáveis e funções do componente\r\n    const componente = fixture.componentInstance;\r\n\r\n    // Executar função\r\n    const retorno = componente.calculo(10, 8);\r\n\r\n    // Validar\r\n    expect(retorno).toEqual(9);\r\n\r\n  });\r\n\r\n // Verificar se a inicialização da variável média é 0 e após executar\r\n // a função calculo o valor seja atribuido a variável média\r\n it('Variável e função', () => {\r\n\r\n  // Fixture\r\n  const fixture = TestBed.createComponent(Componente17Component);\r\n\r\n  // Obter as variáveis e funções do componente\r\n  const componente = fixture.componentInstance;\r\n\r\n  // Validar se a variável média possui o valor 0\r\n  expect(componente.media).toEqual(0);\r\n\r\n  // Executar função\r\n  const retorno = componente.calculo(5, 9);\r\n\r\n  // Atribuir o retorno da função para a variável média\r\n  componente.media = retorno;\r\n\r\n  // Validar se a variável média possui o valor 7\r\n  expect(componente.media).toEqual(7);\r\n\r\n});\r\n\r\n});\r\n"],"mappings":";AAAA;AACA,SAASA,OAAO,QAAQ,uBAAuB;AAC/C,SAASC,qBAAqB,QAAQ,0BAA0B;AAEhE;AACAC,QAAQ,CAAC,wBAAwB,EAAE,MAAK;EAEtC;EACAC,UAAU,eAAAC,iBAAA,CAAC,aAAW;IACpB,MAAMJ,OAAO,CAACK,sBAAsB,CAAC;MACnCC,OAAO,EAAE,CAACL,qBAAqB;KAChC,CAAC,CAACM,iBAAiB,EAAE;EACxB,CAAC,EAAC;EAEF;EACAC,EAAE,CAAC,uBAAuB,EAAE,MAAK;IAE/B;IACA,MAAMC,OAAO,GAAGT,OAAO,CAACU,eAAe,CAACT,qBAAqB,CAAC;IAE9D;IACA,MAAMU,UAAU,GAAGF,OAAO,CAACG,iBAAiB;IAE5C;IACAC,MAAM,CAACF,UAAU,CAACG,IAAI,CAAC,CAACC,OAAO,CAAC,KAAK,CAAC;EAExC,CAAC,CAAC;EAEF;EACAP,EAAE,CAAC,2CAA2C,EAAE,MAAK;IAEnD;IACA,MAAMC,OAAO,GAAGT,OAAO,CAACU,eAAe,CAACT,qBAAqB,CAAC;IAE9D;IACA,MAAMU,UAAU,GAAGF,OAAO,CAACG,iBAAiB;IAE5C;IACAC,MAAM,CAACF,UAAU,CAACK,KAAK,CAAC,CAACD,OAAO,CAAC,CAAC,CAAC;EAErC,CAAC,CAAC;EAEF;EACAP,EAAE,CAAC,6BAA6B,EAAE,MAAK;IAErC;IACA,MAAMC,OAAO,GAAGT,OAAO,CAACU,eAAe,CAACT,qBAAqB,CAAC;IAE9D;IACA,MAAMU,UAAU,GAAGF,OAAO,CAACG,iBAAiB;IAE5C;IACA,MAAMK,OAAO,GAAGN,UAAU,CAACO,OAAO,CAAC,EAAE,EAAE,CAAC,CAAC;IAEzC;IACAL,MAAM,CAACI,OAAO,CAAC,CAACF,OAAO,CAAC,CAAC,CAAC;EAE5B,CAAC,CAAC;EAEH;EACA;EACAP,EAAE,CAAC,mBAAmB,EAAE,MAAK;IAE5B;IACA,MAAMC,OAAO,GAAGT,OAAO,CAACU,eAAe,CAACT,qBAAqB,CAAC;IAE9D;IACA,MAAMU,UAAU,GAAGF,OAAO,CAACG,iBAAiB;IAE5C;IACAC,MAAM,CAACF,UAAU,CAACK,KAAK,CAAC,CAACD,OAAO,CAAC,CAAC,CAAC;IAEnC;IACA,MAAME,OAAO,GAAGN,UAAU,CAACO,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC;IAExC;IACAP,UAAU,CAACK,KAAK,GAAGC,OAAO;IAE1B;IACAJ,MAAM,CAACF,UAAU,CAACK,KAAK,CAAC,CAACD,OAAO,CAAC,CAAC,CAAC;EAErC,CAAC,CAAC;AAEF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}