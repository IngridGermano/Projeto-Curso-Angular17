{"ast":null,"code":"import { __decorate } from \"tslib\";\n// Importar o injectable para prover a injeção de dependência\nimport { Injectable } from '@angular/core';\n// Importar o HttpClient\nimport { HttpClient } from '@angular/common/http';\n// Configuração do @Injectable\nlet ProdutoService = class ProdutoService {\n  http;\n  // URL da API\n  url = 'http://localhost:3000/produtos';\n  // Primeiro método a ser executado quando referenciada a classe de serviço\n  constructor(http) {\n    this.http = http;\n  }\n  // CRUD\n  // Método para selecionar produtos\n  selecionar() {\n    return this.http.get(this.url);\n  }\n  // Método para cadastrar produtos\n  cadastrar(obj) {\n    return this.http.post(this.url, obj);\n  }\n  // Método para alterar produtos\n  alterar(obj) {\n    return this.http.put(`${this.url}/${obj.id}`, obj);\n  }\n  // Método para remover produtos\n  remover(id) {\n    return this.http.delete(`${this.url}/${id}`);\n  }\n  static ctorParameters = () => [{\n    type: HttpClient\n  }];\n};\nProdutoService = __decorate([Injectable({\n  providedIn: 'root'\n})\n// Classe\n], ProdutoService);\nexport { ProdutoService };","map":{"version":3,"names":["Injectable","HttpClient","ProdutoService","http","url","constructor","selecionar","get","cadastrar","obj","post","alterar","put","id","remover","delete","__decorate","providedIn"],"sources":["C:\\Users\\ingri\\OneDrive\\Documentos\\ESTUDOS\\Angular\\curso-angular-basico\\src\\app\\servico\\produto.service.ts"],"sourcesContent":["// Importar o injectable para prover a injeção de dependência\r\nimport { Injectable } from '@angular/core';\r\n\r\n// Importar o HttpClient\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n// Importar o modelo de produto\r\nimport { Produto } from '../modelo/Produto';\r\n\r\n// Importar o RxJS\r\nimport { Observable } from 'rxjs';\r\n\r\n// Configuração do @Injectable\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\n// Classe\r\nexport class ProdutoService {\r\n\r\n// URL da API\r\nurl:string = 'http://localhost:3000/produtos';\r\n\r\n// Primeiro método a ser executado quando referenciada a classe de serviço\r\n  constructor(private http:HttpClient) {}\r\n\r\n// CRUD\r\n// Método para selecionar produtos\r\n  selecionar():Observable<Produto[]>{\r\n    return this.http.get<Produto[]>(this.url);\r\n  }\r\n\r\n// Método para cadastrar produtos\r\n  cadastrar(obj:Produto):Observable<Produto>{\r\n    return this.http.post<Produto>(this.url, obj);\r\n  }\r\n\r\n// Método para alterar produtos\r\n  alterar(obj:Produto):Observable<Produto>{\r\n    return this.http.put<Produto>(`${this.url}/${obj.id}`, obj);\r\n  }\r\n\r\n// Método para remover produtos\r\n  remover(id:number):Observable<any>{\r\n    return this.http.delete<any>(`${this.url}/${id}`);\r\n  }\r\n}\r\n"],"mappings":";AAAA;AACA,SAASA,UAAU,QAAQ,eAAe;AAE1C;AACA,SAASC,UAAU,QAAQ,sBAAsB;AAQjD;AAMO,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAMLC,IAAA;EAJtB;EACAC,GAAG,GAAU,gCAAgC;EAE7C;EACEC,YAAoBF,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;EAAc;EAExC;EACA;EACEG,UAAUA,CAAA;IACR,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAY,IAAI,CAACH,GAAG,CAAC;EAC3C;EAEF;EACEI,SAASA,CAACC,GAAW;IACnB,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAU,IAAI,CAACN,GAAG,EAAEK,GAAG,CAAC;EAC/C;EAEF;EACEE,OAAOA,CAACF,GAAW;IACjB,OAAO,IAAI,CAACN,IAAI,CAACS,GAAG,CAAU,GAAG,IAAI,CAACR,GAAG,IAAIK,GAAG,CAACI,EAAE,EAAE,EAAEJ,GAAG,CAAC;EAC7D;EAEF;EACEK,OAAOA,CAACD,EAAS;IACf,OAAO,IAAI,CAACV,IAAI,CAACY,MAAM,CAAM,GAAG,IAAI,CAACX,GAAG,IAAIS,EAAE,EAAE,CAAC;EACnD;;;;;AA3BWX,cAAc,GAAAc,UAAA,EAL1BhB,UAAU,CAAC;EACViB,UAAU,EAAE;CACb;AAED;AAAA,C,EACaf,cAAc,CA4B1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}